---
- name: Find existing netplan configuration file
  shell: "ls /etc/netplan/*.yaml"
  register: netplan_files
  changed_when: false

- name: Set netplan filename if found
  set_fact:
    netplan_file: "{{ netplan_files.stdout_lines[0] }}"
  when: netplan_files.stdout_lines | length > 0

- name: Fail if no netplan configuration file is found
  fail:
    msg: "No netplan configuration file found in /etc/netplan/"
  when: netplan_files.stdout_lines | length == 0

- name: Display the netplan configuration file to be used
  debug:
    var: netplan_file

- name: Backup existing netplan configuration
  copy:
    src: "{{ netplan_file }}"
    dest: "{{ netplan_file }}.bak"
    remote_src: yes
  become: yes

- name: Get current network interface name from netplan
  shell: "grep 'set-name:' {{ netplan_file }} | awk '{print $2}'"
  register: current_interface
  changed_when: false

- name: Check if the interface is already named 'net0'
  debug:
    msg: "The network interface is already named 'net0'. No changes are needed."
  when: current_interface.stdout == 'net0'

- name: Replace interface name to net0 in netplan configuration
  replace:
    path: "{{ netplan_file }}"
    regexp: "set-name: {{ current_interface.stdout }}"
    replace: "set-name: net0"
  become: yes
  when: current_interface.stdout != 'net0'

- name: Apply netplan configuration
  command: netplan apply
  become: yes
  when: current_interface.stdout != 'net0'

- name: Verify new interface name
  command: ip link show net0
  register: net0_check
  failed_when: false
  when: current_interface.stdout != 'net0'

- name: Debug net0_check to inspect the actual output
  debug:
    var: net0_check

- name: Display information about the renamed interface
  debug:
    msg: "Interface renamed to 'net0'. Details: {{ net0_check.stdout_lines | join(' ') }}"
  when: net0_check is defined and net0_check.stdout_lines is defined and 'net0:' in net0_check.stdout_lines[0] and current_interface.stdout != 'net0'

- name: Restore original netplan configuration if failed
  block:
    - name: Restore original netplan configuration
      copy:
        src: "{{ netplan_file }}.bak"
        dest: "{{ netplan_file }}"
        remote_src: yes
      become: yes

    - name: Apply restored netplan configuration
      command: netplan apply
      become: yes

    - name: Fail with error message
      fail:
        msg: "Failed to rename the network interface to net0. Reverted changes."
  when: net0_check is defined and net0_check.rc is defined and net0_check.rc != 0

